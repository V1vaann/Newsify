import Image from "next/image"
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogClose } from "@/components/ui/dialog"
import { X } from "lucide-react"

export function SummaryDialog({ isOpen, onClose, article, summary }) {
  if (!isOpen) return null

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50" />
      <DialogContent className="fixed top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%] max-w-2xl w-[85vw] max-h-[90vh] bg-white dark:bg-black z-50 rounded-2xl shadow-2xl border-0 p-6 overflow-y-auto">
        <DialogHeader className="space-y-2 pb-4 border-b border-gray-200 dark:border-gray-800">
          <DialogTitle className="text-2xl font-bold text-gray-900 dark:text-gray-100">
            {article.title}
          </DialogTitle>
          <DialogDescription className="text-sm text-gray-600 dark:text-gray-400">
            AI-generated summary of the article from <span className="font-medium text-primary">{article.source}</span>
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-6 py-4">
          {/* Article Image */}
          <div className="relative w-full aspect-[16/9] rounded-lg overflow-hidden shadow-lg bg-white dark:bg-black">
            <Image
              src={article.imageUrl || '/placeholder.jpg'}
              alt={article.title}
              fill
              className="object-contain"
              priority
            />
          </div>

          {/* AI Summary */}
          <div className="space-y-4">
            <div className="space-y-1">
              <h3 className="text-xl font-bold text-gray-900 dark:text-gray-100 border-b-2 border-primary pb-1 inline-block">
                AI Summary
              </h3>
              <p className="text-gray-600 dark:text-gray-400 text-xs">
                A concise summary generated by artificial intelligence
              </p>
            </div>

            <div className="prose dark:prose-invert max-w-none space-y-4">
              {summary.split('\n').map((paragraph, index) => {
                // Check if the paragraph is a heading
                if (paragraph.startsWith('HEADLINE:')) {
                  return (
                    <div key={index} className="space-y-2">
                      <span className="text-lg font-bold text-gray-900 dark:text-gray-100 border-b-2 border-primary pb-1 inline-block">
                        Headline
                      </span>
                      <p className="text-gray-700 dark:text-gray-300 leading-relaxed text-sm">
                        {paragraph.replace('HEADLINE:', '').trim()}
                      </p>
                    </div>
                  )
                }
                if (paragraph.startsWith('KEY POINTS:')) {
                  return (
                    <div key={index} className="space-y-2">
                      <span className="text-lg font-bold text-gray-900 dark:text-gray-100 border-b-2 border-primary pb-1 inline-block">
                        Key Points
                      </span>
                      <p className="text-gray-700 dark:text-gray-300 leading-relaxed text-sm">
                        {paragraph.replace('KEY POINTS:', '').trim()}
                      </p>
                    </div>
                  )
                }
                if (paragraph.startsWith('CONCLUSION:')) {
                  return (
                    <div key={index} className="space-y-2">
                      <span className="text-lg font-bold text-gray-900 dark:text-gray-100 border-b-2 border-primary pb-1 inline-block">
                        Conclusion
                      </span>
                      <p className="text-gray-700 dark:text-gray-300 leading-relaxed text-sm">
                        {paragraph.replace('CONCLUSION:', '').trim()}
                      </p>
                    </div>
                  )
                }
                return (
                  <p key={index} className="text-gray-700 dark:text-gray-300 leading-relaxed text-sm">
                    {paragraph}
                  </p>
                )
              })}
            </div>

            {/* Source Attribution */}
            <div className="pt-4 border-t border-gray-200 dark:border-gray-800">
              <div className="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400">
                <span>Source: <span className="font-medium text-primary">{article.source}</span></span>
                <span>Published: {new Date(article.publishDate).toLocaleDateString()}</span>
              </div>
            </div>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  )
} 